## Autogenerated by Scribe. DO NOT MODIFY.

name: Candidates
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/candidats/{election_id}'
    metadata:
      groupName: Candidates
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all candidates for an election.'
      description: 'This endpoint retrieves all candidates for a specific election.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      election_id:
        name: election_id
        description: 'The ID of the election.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      election_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": [
              {
                "id": 1,
                "name": "John Doe",
                "npi": "123456789",
                "election_id": 1,
                "description": "Une description du candidat",
                "photo": "candidats/photos/johndoe.jpg"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "success": false,
            "message": "Election introuvable",
            "body": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/candidat/{id}'
    metadata:
      groupName: Candidates
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific candidate.'
      description: 'This endpoint retrieves the details of a specific candidate by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the candidate.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": {
              "id": 1,
              "name": "John Doe",
              "npi": "123456789",
              "election_id": 1,
              "photo": "candidats/photos/johndoe.jpg"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Candidat introuvable",
            "body": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/candidat/{id}'
    metadata:
      groupName: Candidates
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a candidate.'
      description: "This endpoint allows updating the details of a specific candidate. Changes cannot be made after the election's start date."
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the candidate to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      npi:
        name: npi
        description: 'The unique NPI identifier of the candidate.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      election_id:
        name: election_id
        description: 'The ID of the election.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The name of the candidate.'
        required: true
        example: 'Une bonne description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'The name of the candidate.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      photo:
        name: photo
        description: 'The photo of the candidate (optional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      npi: '123456789'
      election_id: 1
      description: 'Une bonne description'
      name: 'John Doe'
    fileParameters:
      image: null
      photo: null
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Candidat mis à jour avec succès",
            "body": {
              "id": 1,
              "name": "John Doe",
              "description": "Une bonne description",
              "npi": "123456789",
              "election_id": 1,
              "photo": "candidats/photos/johndoe_updated.jpg"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Candidat introuvable",
            "body": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Vous ne pouvez pas modifié un candidat après la date de lancement des élections",
            "body": ""
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Ce candidat ne candidate pas pour cette election",
            "body": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/candidat
    metadata:
      groupName: Candidates
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new candidate to an election.'
      description: "This endpoint allows adding a new candidate to an election. Candidates cannot be added after the election's start date."
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      npi:
        name: npi
        description: 'The unique NPI identifier of the candidate.'
        required: true
        example: '123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      election_id:
        name: election_id
        description: 'The ID of the election.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the candidate.'
        required: true
        example: 'Une petite description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'The name of the candidate.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      photo:
        name: photo
        description: 'The photo of the candidate (optional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      npi: '123456789'
      election_id: 1
      description: 'Une petite description'
      name: 'John Doe'
    fileParameters:
      image: null
      photo: null
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Candidat ajouté avec succès",
            "body": {
              "id": 1,
              "name": "John Doe",
              "description": "Une bonne description",
              "npi": "123456789",
              "election_id": 1,
              "photo": "candidats/photos/johndoe.jpg"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Ce candidat est déjà inscrit à cette élection",
            "body": ""
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Vous ne pouvez plus ajouter de candidat après la date de lancement des élections",
            "body": ""
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/candidat/{id}'
    metadata:
      groupName: Candidates
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a candidate.'
      description: "This endpoint deletes a candidate. Candidates cannot be deleted after the election's start date."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the candidate to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Candidat retiré avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "",
            "body": "Candidat introuvable"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Vous ne pouvez pas supprimer un candidat après la date de lancement des élections",
            "body": ""
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
