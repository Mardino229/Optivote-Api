## Autogenerated by Scribe. DO NOT MODIFY.

name: Votes
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/votes/{election_id}'
    metadata:
      groupName: Votes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Affiche tous les votes pour une élection donnée.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      election_id:
        name: election_id
        description: "L'identifiant de l'élection."
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      election_id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "data": [
              {
                "id": 1,
                "election_id": 3,
                "candidat_id": 5,
                "voter_id": 2,
                "created_at": "2025-01-01T12:00:00",
                "updated_at": "2025-01-01T12:00:00"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/vote/{election_id}/{user_id}'
    metadata:
      groupName: Votes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Vérifie si un utilisateur a déja voté.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      election_id:
        name: election_id
        description: "L'identifiant de l'éléction."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: "L'identifiant de l'utilisateur."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      election_id: 1
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": false,
              "message": "Vous avez déja voté",
              "data": []
           }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Vous pouvez voté",
              "data": []
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/vote
    metadata:
      groupName: Votes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Crée un nouveau vote.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      candidat_id:
        name: candidat_id
        description: "L'identifiant du candidat."
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      election_id:
        name: election_id
        description: "L'identifiant de l'élection."
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      voter_id:
        name: voter_id
        description: "L'identifiant du votant."
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 11
      candidat_id: 5
      election_id: 3
      voter_id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Vote enregistré avec succès",
            "data": {
              "id": 1,
              "election_id": 3,
              "candidat_id": 5,
              "voter_id": 2,
              "created_at": "2025-01-01T12:00:00",
              "updated_at": "2025-01-01T12:00:00"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Vous n'êtes pas autorisé à voter en cette période",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Vous avez déja voté",
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
