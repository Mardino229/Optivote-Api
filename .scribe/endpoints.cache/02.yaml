## Autogenerated by Scribe. DO NOT MODIFY.

name: Elections
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/elections
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all elections.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": [
              {
                "id": 1,
                "name": "Presidential Election",
                "start_date": "2024-01-01",
                "end_date": "2024-01-10",
                "status": true
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/elections
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new election.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the election.'
        required: true
        example: 'Presidential Election'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date of the election.'
        required: true
        example: '2024-01-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date of the election.'
        required: true
        example: '2024-01-10'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Presidential Election'
      start_date: '2024-01-01'
      end_date: '2024-01-10'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Election created successfully",
            "body": {
              "id": 1,
              "name": "Presidential Election",
              "start_date": "2025-01-01",
              "end_date": "2025-01-10",
              "status": true
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": true,
            "message": "Validation des données échouée. ",
            "body": [erreur de validation]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/elections/{id}'
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a specific election.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the election.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": {
              "id": 1,
              "name": "Presidential Election",
              "start_date": "2024-01-01",
              "end_date": "2024-01-10",
              "status": true
            }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Election introuvable",
            "body": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/elections/{id}'
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an election.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the election to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the election.'
        required: false
        example: 'Updated Election'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The updated start date of the election.'
        required: false
        example: '2024-01-05'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The updated end date of the election.'
        required: false
        example: '2024-01-15'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Election'
      start_date: '2024-01-05'
      end_date: '2024-01-15'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Election mis à jour avec succès",
            "body": {
              "id": 1,
              "name": "Updated Election",
              "start_date": "2024-01-05",
              "end_date": "2024-01-15",
              "status": true
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "success": false,
             "message": "Election introuvable",
             "body": null
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/elections/{id}'
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an election.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the election to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Election supprimé avec succès",
            "body": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "message": "Election introuvable",
              "body": null
            }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/election_inprogress
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve elections currently in progress.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": [
              {
                "id": 2,
                "name": "Midterm Election",
                "start_date": "2024-12-25",
                "end_date": "2025-01-05",
                "status": true
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/election_completed
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve completed elections.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": [
              {
                "id": 1,
                "name": "Presidential Election",
                "start_date": "2024-01-01",
                "end_date": "2024-01-10",
                "status": false
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/election_notStarted
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve elections that have not started.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "",
            "body": [
              {
                "id": 3,
                "name": "Upcoming Election",
                "start_date": "2025-02-01",
                "end_date": "2025-02-10",
                "status": false
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/second_tour/{election_id}'
    metadata:
      groupName: Elections
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a second round of an election.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      election_id:
        name: election_id
        description: |-
          The ID of the election. Example: 1
          required The start date of the election.
        required: true
        example: 2024
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      election_id: 2024
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-01-05T14:30:09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date of the election.'
        required: true
        example: '2024-01-10'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-01-05T14:30:09'
      end_date: '2024-01-10'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Election du deuxième tour crée avec succès",
            "body": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Vous ne pouvez pas créer de second tour pour cette élection",
            "body": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "message": "Election introuvable",
              "body": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Opération échoué. L'élection n'est pas terminée",
            "body": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 406
        content: |-
          {
            "success": false,
            "message": "Opération échoué. Le second tour doit commencer à la fin du premier tour",
            "body": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
